2+2
getwd()
install.packages("swirl")
library("swirl")
install_course_zip(“/Users/alexross/MITx/14_310x_Intro_to_R.zip”,multi=FALSE)
install_course_zip("/Users/alexross/MITx/14_310x_Intro_to_R.zip", multi=FALSE)
swirl()
5 + 7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div = z / my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
library("tiderverse")
library("tidyverse")
install.packages("tidyverse")
library("tidyverse")
papers <- as_tibble(read_csv("/Users/alexross/Downloads/CitesforSara.csv"))
papers_select <- select(papers, journal, year, cities, title, au1)
papers_select <- select(papers, journal, year, cites, title, au1)
View(papers_select)
filtered_papers <- filter(papers_select, cites >= 100)
summary(filter(papers_select, cites >= 100))
summary(group_by(journal))
summary(group_by(papers_select, journal))
group_by(papers_select, journal)
by_journal <-papers_select %>% group_by(journal) %>% summarise(n= n())
View(by_journal)
by_journal <-papers_select %>% group_by(journal) %>% summarise(n=sum(cites)
)
View(by_journal)
papers_female <- select(papers, contains("female"))
View(papers_female)
papers %>% group_by(journal) %>% summarise(n_distinct(au1))
papers %>% summarise(n_distinct(au1))
pnorm(0.75,lower.tail=TRUE)
qnorm(pnorm(0.75,lower.tail=TRUE),lower.tail=TRUE)
qnorm(0.75,lower.tail=TRUE)
qnorm(0.99,lower.tail=TRUE)
qnorm(2.1,lower.tail=TRUE)
qnorm(0.8, 500, 10.6)
qnorm(0.9, 500, 10.6)
data = read.csv("qian.csv")
rm(list = ls())
setwd("/Users/alexross/MITx/FinalExam")
data = read.csv("qian.csv")
attach(data)
summary(data)
# Question 2
data$post = as.integer(data$biryr >= 1979)
View(data)
data$postxteasown = data$post * data$teasown
summary(data)
filter(data, post = 1)
library("dplyr")
filter(data, post = 1)
filter(data, post == 1)
count(filter(data, post == 1))
count(filter(data, post == 1))
summary(data)
model1 = lm(sex ~ teasown + post + teasown * post)
model1 = lm(sex ~ teasown + post + teasown * post, data = data)
summary(model1)
coef(model1)
coef(model1)$(Intercept)
coef(model1)[["Intercept"]]
coef(model1)[["(Intercept)"]]
round(coef(model1)[["(Intercept)"]], 3)
round(coef(model1)[["teasown"]], 3)
summary(model1)
round(coef(model1)[["teasown:post "]], 3)
round(coef(model1)[["teasown * post "]], 3)
coef(model1)
# Question 26
packages.install("lfe")
# Question 26
install.packages("lfe")
library("pml")
library("plm")
library(plm)
# Question 26
install.packages("plm")
library(plm)
model2 = plm(sex ~ post + teasown * post)
model2 = plm(sex ~ post + teasown * post, data = data)
summary(model2)
library("felm")
# Question 26
#install.packages("plm")
install.packages("felm")
# Question 26
#install.packages("plm")
install.packages("lfe")
library("felm")
model2 = plm(sex ~ post + teasown * post + factor(admin), data = data)
summary(model2)
data$gamma = factor(data$admin)
model2 = plm(sex ~ post + teasown * post + admin, data = data)
model2 = lm(sex ~ post + teasown * post + factor(admin), data = data)
summary(model2)
coef(model2)[1:3
]
coef(model2)[1:4]
model3 = lm(sex ~ post + teasownxpost + factor(admin), data = data)
model3 = lm(sex ~ post + postxteasown + factor(admin), data = data)
summary(model3)
summary(model2)
rm("model2")
model2 = model3
summary(model2)
rm(model3)
summary(model1)
summary(lm(sex ~ teasown + post + postxteasown, data = data))
# Question 25
model1 = lm(sex ~ teasown + post + postxteasown, data = data)
coef(model1)[["postxteasown"]]
coef(model1)[["postxteasown"]] >= coef(model2)[["postxteasown"]]
coef(model1)[["postxteasown"]] <= coef(model2)[["postxteasown"]]
beta3 = coef(model1)[["postxteasown"]]
alpha3 = coef(model2)[["postxteasown"]]
rm("beta3")
beta3
(beta3 = coef(model1)[["postxteasown"]])
beta3
(beta3 = coef(model1)[["postxteasown"]])
(alpha3 = coef(model2)[["postxteasown"]])
alpha3 <= beta3
alpha3 >= beta3
coef(model1)
summary(model1)$coefficients
summary(model1)$coefficients[,4]
summary(model1)$coefficients[,4][["postxteasown"]]
(beta3pvalue = summary(model1)$coefficients[,4][["postxteasown"]])
(alpha3pvalue = summary(model2)$coefficients[,4][["postxteasown"]])
summary(model1)
beta3pvalue
summary(model2)
alpha3pvalue
beta3pvalue >= alpha3pvalue
beta3pvalue <= alpha3pvalue
summary(model1)
0.5025541 / 0.0008432
0.0049071 / 0.0019129
# Question 16
dat1 = matrix(c(0.85, 0.99, 1, 0.76, 0.26, 0.45, 0.97, 0.72), ncol = 2)
fisher.test(dat1)
dat1
# Question 16
dat1 = matrix(c(0.85, 0.99, 1, 0.76, 0, 0, 0, 0, 0, 0, 0, 0, 0.26, 0.45, 0.97, 0.72), ncol = 2)
fisher.test(dat1)
dat1
# Question 16
dat1 = matrix(c(0.85, 0.99, 1, 0.76, 0.74, 0.55, 0.03, 0.28, 0.15, 0.01, 0, 0.24, 0.26, 0.45, 0.97, 0.72), ncol = 2)
dat1
fisher.test(dat1)
# Question 16
dat1 = matrix(c(0.85, 0.99, 1, 0.76, 0.74, 0.55, 0.03, 0.28, 0.15, 0.01, 0, 0.24, 0.26, 0.45, 0.97, 0.72), nrow = 2)
dat1
# Question 16
dat1 = matrix(c(0.9, 0.1, 0.6, 0.4), nrow = 2)
dat1
# Question 16
dat1 = matrix(c(0.9, 0.1, 0.6, 0.4), ncol = 2)
dat1
fisher.test(dat1)
# Question 16
dat1 = matrix(c(0.9, 0.1, 0, 0, 0, 0, 0.6, 0.4), ncol = 2)
dat1
fisher.test(dat1)
# Questions 1 - 4
#-------------------------------------------------
#print(dat)
perms <- chooseMatrix(8,4)
