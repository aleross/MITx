2+2
getwd()
install.packages("swirl")
library("swirl")
install_course_zip(“/Users/alexross/MITx/14_310x_Intro_to_R.zip”,multi=FALSE)
install_course_zip("/Users/alexross/MITx/14_310x_Intro_to_R.zip", multi=FALSE)
swirl()
5 + 7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div = z / my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
library("tiderverse")
library("tidyverse")
install.packages("tidyverse")
library("tidyverse")
papers <- as_tibble(read_csv("/Users/alexross/Downloads/CitesforSara.csv"))
papers_select <- select(papers, journal, year, cities, title, au1)
papers_select <- select(papers, journal, year, cites, title, au1)
View(papers_select)
filtered_papers <- filter(papers_select, cites >= 100)
summary(filter(papers_select, cites >= 100))
summary(group_by(journal))
summary(group_by(papers_select, journal))
group_by(papers_select, journal)
by_journal <-papers_select %>% group_by(journal) %>% summarise(n= n())
View(by_journal)
by_journal <-papers_select %>% group_by(journal) %>% summarise(n=sum(cites)
)
View(by_journal)
papers_female <- select(papers, contains("female"))
View(papers_female)
papers %>% group_by(journal) %>% summarise(n_distinct(au1))
papers %>% summarise(n_distinct(au1))
pnorm(0.75,lower.tail=TRUE)
qnorm(pnorm(0.75,lower.tail=TRUE),lower.tail=TRUE)
qnorm(0.75,lower.tail=TRUE)
qnorm(0.99,lower.tail=TRUE)
qnorm(2.1,lower.tail=TRUE)
qnorm(0.8, 500, 10.6)
qnorm(0.9, 500, 10.6)
install.packages('perm')
# Preliminaries
#-------------------------------------------------
#install.packages('perm')
library(perm)
rm(list = ls())
setwd("/Users/alexross/MITx/Module7")
# Questions 1 - 4
#-------------------------------------------------
print(dat)
# Preliminaries
#-------------------------------------------------
#install.packages('perm')
library(perm)
perms <- chooseMatrix(8,2)
A <- matrix(c(0.462, 0.731, 0.571, 0.923, 0.333, 0.750, 0.893, 0.692), nrow=8, ncol=1, byrow=TRUE)
treatment_avg <- (1/4)*perms%*%A
control_avg <- (1/4)*(1-perms)%*%A
test_statistic <- abs(treatment_avg-control_avg)
View(test_statistic)
rownumber <- apply(apply(perms, 1,
function(x) (x == c(0, 1, 0, 0, 0, 1, 1, 1))),
2, sum)
rownumber <- (rownumber == 8)
observed_test <- test_statistic[rownumber == TRUE]
larger_than_observed <- (test_statistic >= 0.19425)
View(larger_than_observed)
View(control_avg)
View(treatment_avg)
rm(list = ls())
# Questions 1 - 4
#-------------------------------------------------
#print(dat)
perms <- chooseMatrix(8,4)
A <- matrix(c(0.462, 0.731, 0.571, 0.923, 0.333, 0.750, 0.893, 0.692), nrow=8, ncol=1, byrow=TRUE)
treatment_avg <- (1/4)*perms%*%A
control_avg <- (1/4)*(1-perms)%*%A
test_statistic <- abs(treatment_avg-control_avg)
rownumber <- apply(apply(perms, 1, function(x) (x == c(0, 1, 0, 0, 0, 1, 1, 1))), 2, sum)
rownumber <- (rownumber == 8)
observed_test <- test_statistic[rownumber == TRUE]
larger_than_observed <- (test_statistic >= 0.19425)
#numbers in which the statistic exceeds the value in the observed date
sum(larger_than_observed)
View(larger_than_observed)
View(perms)
larger_than_observed <- (test_statistic >= observed_test)
#numbers in which the statistic exceeds the value in the observed date
sum(larger_than_observed)
# Question 5 - 6
#-------------------------------------------------
simul_stat <- as.vector(NULL)
schools <- read.csv('teachers_final.csv')
for(i in 1:100) {
print(i)
schools$rand <- runif(100,min=0,max=1)
schools$treatment_rand <- as.numeric(rank(schools$rand)<=49)
schools$control_rand = 1-schools$treatment_rand
simul_stat <-append(simul_stat,
sum(schools$treatment_rand*schools$open)/sum(schools$treatment_rand)
- sum(schools$control_rand*schools$open)/sum(schools$control_rand))
}
schools$control = 1-schools$treatment
actual_stat <- sum(schools$treatment*schools$open)/sum(schools$treatment) - sum(schools$control*schools$open)/sum(schools$control)
sum(abs(simul_stat) >= actual_stat)/NROW(simul_stat)
sum(simul_stat >= actual_stat)
NROW(simul_stat)
View(schools)
View(schools)
abs(simul_stat)
actual_stat <- sum(schools$treatment*schools$open)/sum(schools$treatment) - sum(schools$control*schools$open)/sum(schools$control)
abs(simul_stat) >= actual_stat
# Question 5 - 6
#-------------------------------------------------
simul_stat <- as.vector(NULL)
schools <- read.csv('teachers_final.csv')
set.seed(1001)
for(i in 1:1000) {
print(i)
schools$rand <- runif(100,min=0,max=1)
schools$treatment_rand <- as.numeric(rank(schools$rand)<=49)
schools$control_rand = 1-schools$treatment_rand
simul_stat <-append(simul_stat,
sum(schools$treatment_rand*schools$open)/sum(schools$treatment_rand)
- sum(schools$control_rand*schools$open)/sum(schools$control_rand))
}
schools$control = 1-schools$treatment
actual_stat <- sum(schools$treatment*schools$open)/sum(schools$treatment) - sum(schools$control*schools$open)/sum(schools$control)
sum(abs(simul_stat) >= actual_stat)/NROW(simul_stat)
# Question 5 - 6
#-------------------------------------------------
simul_stat <- as.vector(NULL)
schools <- read.csv('teachers_final.csv')
set.seed(1001)
for(i in 1:10000) {
print(i)
schools$rand <- runif(100,min=0,max=1)
schools$treatment_rand <- as.numeric(rank(schools$rand)<=49)
schools$control_rand = 1-schools$treatment_rand
simul_stat <-append(simul_stat,
sum(schools$treatment_rand*schools$open)/sum(schools$treatment_rand)
- sum(schools$control_rand*schools$open)/sum(schools$control_rand))
}
schools$control = 1-schools$treatment
actual_stat <- sum(schools$treatment*schools$open)/sum(schools$treatment) - sum(schools$control*schools$open)/sum(schools$control)
sum(abs(simul_stat) >= actual_stat)/NROW(simul_stat)
View(schools)
schools <- read.csv('teachers_final.csv')
control_mean <- sum(schools$control*schools$open)/sum(schools$control)
treatment_mean <- sum(schools$treatment*schools$open)/sum(schools$treatment)
ate <- treatment_mean - control_mean
ate
schools$control = 1-schools$treatment
control_mean <- sum(schools$control*schools$open)/sum(schools$control)
ate <- treatment_mean - control_mean
ate
#Question 7 - 8
#---------------------------------------------------
#Printing the ATE
ate <- actual_stat
ate
s_c <- (1/(sum(schools$control)-1))*sum(((schools$open-control_mean)*schools$control)^2)
s_t <- (1/(sum(schools$treatment)-1))*sum(((schools$open-treatment_mean)*schools$treatment)^2)
Vneyman <- (s_c/sum(sum(schools$control)) + s_t/sum(sum(schools$treatment)))
print(sqrt(Vneyman))
print(actual_stat/sqrt(Vneyman))
print(actual_stat-1.96*sqrt(Vneyman))
print(actual_stat+1.96*sqrt(Vneyman))
print(sqrt(Vneyman))
print(actual_stat/sqrt(Vneyman))
print(actual_stat-1.96*sqrt(Vneyman))
print(actual_stat+1.96*sqrt(Vneyman))
#Question 7 - 8
#---------------------------------------------------
#Printing the ATE
ate <- actual_stat
ate
ate / 2
2^2
(s_c + s_t) / 2
Vneyman <- (s_c/sum(sum(schools$control)) + s_t/sum(sum(schools$treatment)))
print(sqrt(Vneyman))
Vneyman <- (s_c/sum(schools$control) + s_t/sum(sum(schools$treatment)))
print(sqrt(Vneyman))
Vneyman <- (s_c/sum(schools$control) + s_t/sum(schools$treatment))
print(sqrt(Vneyman))
# Question 13
sigma <- (s_c + s_t)/2
N <- ((qnorm(power) + qnorm(1 - (alpha/2))) ^ 2) / ((0.098/(sigma)) * 0.5 * 0.5)
power <- 0.9
alpha <- 0.5
N <- ((qnorm(power) + qnorm(1 - (alpha/2))) ^ 2) / ((0.098/(sigma)) * 0.5 * 0.5)
tau <- 0.098 ^ 2
N <- ((qnorm(power) + qnorm(1 - (alpha/2))) ^ 2) / ((tau/(sigma)) * 0.5 * 0.5)
qnorm(power)
qnorm(1-(alpha/2))
qnorm(0.975)
alpha <- 0.05
tau <- 0.098 ^ 2
N <- ((qnorm(power) + qnorm(1 - (alpha/2))) ^ 2) / ((tau/(sigma)) * 0.5 * 0.5)
N <- ((qnorm(power) + qnorm(1 - (alpha/2))) ^ 2) / ((tau/(sigma)) * 0.5 * 0.5)
N
#Question 15
#---------------------------------------------------
attach(schools)
plot <-npreg(xdat=XXX, ydat= XXX, bws=XXX,bandwidth.compute=FALSE)
package.install("np")
packages.install("np")
install.packages("np")
#Question 15
#---------------------------------------------------
#install.packages('np')
library(np)
attach(schools)
plot <-npreg(xdat=XXX, ydat= XXX, bws=XXX,bandwidth.compute=FALSE)
plot <-npreg(xdat=schools$open, ydat= schools$teacherscore, bws=20,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$teacherscore, ydat= schools$open, bws=20,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$teacherscore, ydat= schools$open, bws=1,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$open, ydat= schools$teacherscore, bws=1,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$teacherscore, ydat= schools$open, bws=0.04,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$teacherscore, ydat= schools$open, bws=0.001,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$teacherscore, ydat= schools$open, bws=1,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$teacherscore, ydat= schools$open, bws=20,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$open, ydat= schools$teacherscore, bws=20,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$open, ydat= schools$teacherscore, bws=1,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$open, ydat= schools$teacherscore, bws=0.01,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$open, ydat= schools$teacherscore, bws=0.04,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$open, ydat= schools$teacherscore, bws=0.001,bandwidth.compute=FALSE)
plot(plot)
plot <-npreg(xdat=schools$open, ydat= schools$teacherscore, bws=0.04,bandwidth.compute=FALSE)
plot(plot)
# Question 18
library('ggplot2')
actual_stat <- sum(schools$treatment*schools$open)/sum(schools$treatment)
actual_stat <- sum(schools$treatment*schools$open)/sum(schools$treatment) -
sum(schools$control*schools$open)/sum(schools$control)
actual_stat <- sum(schools$treatment*schools$open)/sum(schools$treatment) - sum(schools$control*schools$open)/sum(schools$control)
actual_stat <- sum(schools$treatment*schools$open)/sum(schools$treatment)
actual_stat <- sum(schools$treatment*schools$open)/sum(schools$treatment) -
sum(schools$control*schools$open)/sum(schools$control)
schools$control*schools$open
schools$control*schools$open > 0
temp <- schools$control*schools$open
temp
temp[temp > 0]
# score_tv is a list of scores from the treatment group
# the number of entries in score_tv do not match those in score_cv
control <- schools$control*schools$open
# score_cv is a list of scores from the control group
control <- schools$control*schools$open
score_cv <- control[control > 0]
# score_tv is a list of scores from the treatment group
# the number of entries in score_tv do not match those in score_cv
treatment <- schools$treatment*schools$open
score_tv <- treatment[treatment > 0]
# create data frames from lists
# the data frames have one column each
cv <- cbind.data.frame(score_cv)
tv <- cbind.data.frame(score_tv)
# give the column a name
colnames(cv) <- colnames(tv) <- "score"
# add a group number to the data frames
# 0 for control, 1 for treatment
cv_df <- cbind(0, cv$score)
tv_df <- cbind(1, tv$score)
# combine the two dataframes into one (longer) data frame
y <- rbind.data.frame(cv_df, tv_df)
# give the data frame column names
colnames(y) <- c("group", "score")
# plot ecdf of the two groups
ggplot(y, aes(x=score, colour=factor(group))) + stat_ecdf() + labs(colour="group")
